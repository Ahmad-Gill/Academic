[org 0x0100]

jmp start
dig: dw 0,0,0,0
l: dw 0
r:dw 0


find_l_r:
	
	
	
	mov cx,4
	mov bx,0
	mov ax,0
ll:
	add ax,[dig+bx]
	add bx,2
	loop ll


	shr ax,2
	mov [l],ax
	add ax,3
	mov [r],ax
ret


digit:

	push bp
	mov bp,sp
	push ax
	push bx
	push si
	mov si,0
	mov ax,[bp+4]
repeat:
	xor dx,dx	
	
	mov bx,0x10
	div bx
	mov [dig+si],dx
	add si,2
	cmp ax,0
	jne repeat
	
	call find_l_r
pop si
pop bx
pop ax
pop bp

ret 2
	
start:

	mov ax,0x5617
	push ax
	call digit
	mov bx,[r]
	mov cx,[l]

mov ax,0x4c00
int 21h